import numpy as np
import os

# ğŸ”‘ Kaggle Secrets veya ortam deÄŸiÅŸkenlerinden API key'i al
try:
    from kaggle_secrets import UserSecretsClient
    user_secrets = UserSecretsClient()
    OPENAI_KEY = user_secrets.get_secret("OPENAI_API_KEY")
    GEMINI_KEY = user_secrets.get_secret("GEMINI_API_KEY")
except Exception:
    OPENAI_KEY = os.environ.get("OPENAI_API_KEY")
    GEMINI_KEY = os.environ.get("GEMINI_API_KEY")

# --- Grad-CAM Analiz Fonksiyonu ---
def get_peak_activation_region(heatmap):
    max_val = heatmap.max()
    y, x = np.unravel_index(np.argmax(heatmap), heatmap.shape)
    return {"x": int(x), "y": int(y), "value": float(max_val)}

# --- AÃ§Ä±klama Fonksiyonu ---
def explain_prediction_with_ai(predicted_class, confidence, peak_region, class_names):
    notes = f"Grad-CAM en yÃ¼ksek aktivasyon noktasÄ± (x={peak_region['x']}, y={peak_region['y']}), yoÄŸunluk={peak_region['value']:.2f}."

    prompt = f"""
    Bir Alzheimer sÄ±nÄ±flandÄ±rma modeli MRI gÃ¶rÃ¼ntÃ¼sÃ¼nÃ¼ analiz etti.
    Tahmin edilen sÄ±nÄ±f: {predicted_class}
    GÃ¼ven seviyesi: %{confidence*100:.2f}

    {notes}

    LÃ¼tfen modelin bu sÄ±nÄ±fa nasÄ±l karar vermiÅŸ olabileceÄŸini, beynin potansiyel bÃ¶lgeleri aÃ§Ä±sÄ±ndan
    (Ã¶r. hipokampus, korteks, temporal lob) yorumla. AÃ§Ä±klaman tÄ±bbi bir iÃ§gÃ¶rÃ¼ gibi olsun, ama kullanÄ±cÄ± dostu kal.
    """

    # --- Direkt Gemini kullan ---
    import google.generativeai as genai
    if not GEMINI_KEY:
        raise ValueError("GEMINI_API_KEY bulunamadÄ±! Kaggle Secrets veya .env Ã¼zerinden tanÄ±mlayÄ±n.")
    
    genai.configure(api_key=GEMINI_KEY)
    model = genai.GenerativeModel("gemini-1.5-flash")
    response = model.generate_content(prompt)
    return response.text
